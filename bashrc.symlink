# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

if [[ ! -f ~/.bash-preexec.sh ]]; then
  curl https://raw.githubusercontent.com/rcaloras/bash-preexec/master/bash-preexec.sh -o ~/.bash-preexec.sh
else
  source ~/.bash-preexec.sh
fi

# source ~/.sensible.bash

export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
shopt -s histappend                      # append to history, don't overwrite it
# Ignore these commands in history
HISTIGNORE='ls:bg:fg:history'
# Add a timestamp to history
HISTTIMEFORMAT='%F %T '
export HISTFILE="$HOME/.history/$(date +%F)-$$"
# Use one command per line
shopt -s cmdhist
# Store history immediately

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

set -o vi
# Still allow alt+. to insert last argument.
bind -m vi-command ".":insert-last-argument

alias r='fc -s'

export TERM=screen-256color

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

export VISUAL=vim
export EDITOR=vim

# fhe - repeat history edit
writecmd (){ perl -e 'ioctl STDOUT, 0x5412, $_ for split //, do{ chomp($_ = <>); $_ }' ; }

# Fhind over all history.
fh() {
  find ~/.history/* | sort  | xargs -I{} grep -v -e '#.*' {} | fzf +s --tac | writecmd
}
# Bind fh to ctrl-e
bind "'\C-e':'fh\n'"

n() {
  printf "# $(date +%F)" >> ~/notes/notes.txt
  vim "+ normal Go" ~/notes/notes.txt
}

if [[ "$(uname -a)" =~ "Darwin" && -f ~/.bashrc.osx ]]; then
  . ~/.bashrc.osx
fi

if [ -f ~/.bashrc.local ]; then
  . ~/.bashrc.local
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

if [ -f ~/.ps1 ]; then
  . ~/.ps1
fi
precmd_functions+=(set_ps1)

export GOPATH="$HOME/go"

export PATH="$HOME/bin:$HOME/.dotfiles/bin:$PATH"

export FZF_DEFAULT_COMMAND='ag --hidden  -g ""'
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/private/tmp/google-cloud-sdk/path.bash.inc' ]; then source '/private/tmp/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/private/tmp/google-cloud-sdk/completion.bash.inc' ]; then source '/private/tmp/google-cloud-sdk/completion.bash.inc'; fi

export BOOKMARKS=~/bookmarks
# add a bookmark for the current directory
function abm() {
  touch "$BOOKMARKS"
  pwd >> "$BOOKMARKS"
  sort -u -o "$BOOKMARKS" "$BOOKMARKS"
}

# delete bookmark of current directory
function dbm() {
  touch "$BOOKMARKS"
  cat "$BOOKMARKS" | grep -v "^$(pwd)$" >| "$BOOKMARKS"
}

# jump to a bookmark
function bm() {
  touch "$BOOKMARKS"
  cd "$(cat "$BOOKMARKS" | fzf --height 40% --reverse --inline-info)"
}

# Quick up n levels
# Requires: n >= 0
function up() {
  # default to 1
  declare -i d=${@:-1};
  # ensure non-negative
  (($d < 0)) && (>&2 echo "up: Error: negative value provided") && return 1;
  # remove last d directories from pwd, append "/" in case result is empty
  cd "$(pwd | sed -E 's;(/[^/]*){0,'$d'}$;;')/";
}
if [ -f ~/.cargo/env ]; then
  . ~/.cargo/env
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
